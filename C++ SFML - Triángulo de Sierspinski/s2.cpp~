#include <SFML/Graphics.hpp>
#include <math.h>

#define SZ 800

void draw_triang(int x1, int y1, int x2, int y2, int x3, int y3, sf::Color col, sf::RenderWindow* win) {
   sf::VertexArray triangle(sf::Triangles, 3);

  triangle[0].position = sf::Vector2f(x1, y1);
  triangle[1].position = sf::Vector2f(x2, y2);
  triangle[2].position = sf::Vector2f(x3, y3);

  triangle[0].color = col;
  triangle[1].color = col;
  triangle[2].color = col;
  
  win->draw(triangle);
}

void draw_sierspinki(int it, int x1, int y1, int x2, int y2, int x3, int y3, sf::RenderWindow* win) {
  if (it == 0) return;
  
  int y_i = (y1 + y2) / 2;

  int px1 = (x2 + x1) / 2, py1 = y_i;
  int px2 = (x3 + x1) / 2, py2 = y_i;
  int px3 = x1, py3 = y2;

  draw_triang(px1, py1, px2, py2, px3, py3, sf::Color::Black, win);

  // arriba
  draw_sierspinki(it - 1, x1, y1, px1, py1, px2, py2, win);

  // izquierda
  draw_sierspinki(it - 1, px1, py1, x2, y2, px3, py3, win);

  // derecha
  draw_sierspinki(it - 1, px2, py2, px3, py3, x3, y3, win);
}

void dibuixar(int it, int lado, sf::RenderWindow* win) {
  // calculamos vÃ©rtices iniciales
  int x = lado / 2;
  int y = lado * std::sqrt(3) / 6;
  
  int centroX = SZ / 2;
  int centroY = (SZ + y) / 2;

  int px1 = centroX, py1 = centroY - 2 * y;
  int px2 = centroX - x, py2 = centroY + y;
  int px3 = centroX + x, py3 = centroY + y;

  draw_triang(px1, py1, px2, py2, px3, py3, sf::Color::White, win);

  draw_sierspinki(it, px1, py1, px2, py2, px3, py3, win);
}

int main(int argc, char* const argv[]) {
  sf::RenderWindow* win = new sf::RenderWindow(sf::VideoMode(SZ, SZ), "Sierspinski", sf::Style::Close | sf::Style::Titlebar);


  bool init = true;
  
  while (win->isOpen()) {
    sf::Event e;
    while (win->pollEvent(e)) {
      if (e.type == sf::Event::Closed) win->close();
      if (e.type == sf::Event::KeyPressed) {
      }
    }

    // dibuixam
    if (init) {
      win->clear(sf::Color(0,0,0));

      dibuixar(4, 0.9 * SZ, win);
      win->display();

      init = false;
    }
  }
  return 0;
}
